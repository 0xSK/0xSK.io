// import Tilt from 'react-parallax-tilt';

// /* Props:
// tiltEnable: boolean ▶︎ true
// Boolean to enable/disable tilt effect.

// tiltReverse: boolean ▶︎ false
// Reverse the tilt direction.

// tiltAngleXInitial: number ▶︎ 0
// Initial tilt value (degrees) on x axis.

// tiltAngleYInitial: number ▶︎ 0
// Initial tilt value (degrees) on y axis.

// tiltMaxAngleX: number ▶︎ 20
// Max tilt rotation (degrees) on x axis (range: 0°-90°).

// tiltMaxAngleY: number ▶︎ 20
// Max tilt rotation (degrees) on y axis (range: 0°-90°).

// tiltAxis: 'x' | 'y' ▶︎ undefined
// Enable tilt on single axis.

// tiltAngleXManual: number | null} ▶︎ null
// Manual tilt rotation (degrees) on x axis.

// tiltAngleYManual: number | null} ▶︎ null
// Manual tilt rotation (degrees) on y axis.

// glareEnable: boolean ▶︎ false
// Boolean to enable/disable glare effect.

// glareMaxOpacity: number ▶︎ 0.7
// The maximum glare opacity (range: 0-1).

// glareColor: string ▶︎ #ffffff
// Set color of glare effect.

// glareBorderRadius: string ▶︎ 0
// Accepts any standard CSS border radius. Useful if the glare color is different to the page color.

// glarePosition: 'top' | 'right' | 'bottom' | 'left' | 'all' ▶︎ bottom
// Set position of glare effect.

// glareReverse: boolean ▶︎ false
// Reverse the glare direction.

// scale: number ▶︎ 1
// Scale of the component (1.5 = 150%, 2 = 200%, etc.).

// perspective: number ▶︎ 1000
// The perspective property defines how far the object (wrapped/child component) is away from the user. The lower the more extreme the tilt gets.

// flipVertically: boolean ▶︎ false
// Boolean to enable/disable vertical flip of component.

// flipHorizontally: boolean ▶︎ false
// Boolean to enable/disable horizontal flip of component.

// reset: boolean ▶︎ true
// If the effects has to be reset on onLeave event.

// transitionEasing: string ▶︎ cubic-bezier(.03,.98,.52,.99)
// Easing of the transition when manipulating the component.

// transitionSpeed: number ▶︎ 400
// Speed of the transition when manipulating the component.

// trackOnWindow: boolean ▶︎ false
// Track mouse and touch events on the whole window.

// gyroscope: boolean ▶︎ false
// Boolean to enable/disable device orientation detection.

// onMove: Function => ({ tiltAngleX: number, tiltAngleY: number, tiltAngleXPercentage: number, tiltAngleYPercentage: number, glareAngle: number, glareOpacity: number, eventType: string | null }) => void
// Gets triggered when user moves on the component.

// onEnter: Function => (eventType: string | null) => void
// Gets triggered when user enters the component.

// onLeave: Function => (eventType: string | null) => void
// Gets triggered when user leaves the component.
// */

// type TiltedProps = {
//   tiltEnable?: boolean;
//   tiltReverse?: boolean;
//   tiltAngleXInitial?: number;
//   tiltAngleYInitial?: number;
//   tiltMaxAngleX?: number;
//   tiltMaxAngleY?: number;
//   tiltAxis?: 'x' | 'y' | undefined;
//   tiltAngleXManual?: number | undefined;
//   tiltAngleYManual?: number | undefined;
//   glareEnable?: boolean;
//   glareMaxOpacity?: number;
//   glareColor?: string;
//   glareBorderRadius?: string;
//   glarePosition?: 'top' | 'right' | 'bottom' | 'left' | 'all';
//   glareReverse?: boolean;
//   scale?: number;
//   perspective?: number;
//   flipVertically?: boolean;
//   flipHorizontally?: boolean;
//   reset?: boolean;
//   transitionEasing?: string;
//   transitionSpeed?: number;
//   trackOnWindow?: boolean;
//   gyroscope?: boolean;
//   onMove?: (
//     tiltAngleX: number,
//     tiltAngleY: number,
//     tiltAngleXPercentage: number,
//     tiltAngleYPercentage: number,
//     glareAngle: number,
//     glareOpacity: number,
//     eventType: string | null
//   ) => void;
//   onEnter?: (eventType: string | null) => void;
//   onLeave?: (eventType: string | null) => void;
// };

// const Tilted = ({
//   tiltEnable = true,
//   tiltReverse = false,
//   tiltAngleXInitial = 0,
//   tiltAngleYInitial = 0,
//   tiltMaxAngleX = 20,
//   tiltMaxAngleY = 20,
//   tiltAxis = undefined,
//   tiltAngleXManual = undefined,
//   tiltAngleYManual = undefined,
//   glareEnable = false,
//   glareMaxOpacity = 0.7,
//   glareColor = '#ffffff',
//   glareBorderRadius = '0',
//   glarePosition = 'bottom',
//   glareReverse = false,
//   scale = 1,
//   perspective = 1000,
//   flipVertically = false,
//   flipHorizontally = false,
//   reset = true,
//   transitionEasing = 'cubic-bezier(.03,.98,.52,.99)',
//   transitionSpeed = 400,
//   trackOnWindow = false,
//   gyroscope = false,
//   onMove = () => {},
//   onEnter = () => {},
//   onLeave = () => {},
//   children,
// }: TiltedProps) => {
//   const tiltProps = {
//     tiltEnable,
//     tiltReverse,
//     tiltAngleXInitial,
//     tiltAngleYInitial,
//     tiltMaxAngleX,
//     tiltMaxAngleY,
//     tiltAxis,
//     tiltAngleXManual,
//     tiltAngleYManual,
//     glareEnable,
//     glareMaxOpacity,
//     glareColor,
//     glareBorderRadius,
//     glarePosition,
//     glareReverse,
//     scale,
//     perspective,
//     flipVertically,
//     flipHorizontally,
//     reset,
//     transitionEasing,
//     transitionSpeed,
//     trackOnWindow,
//     gyroscope,
//     onMove,
//     onEnter,
//     onLeave,
//   };
//   return <Tilt {...tiltProps}>{children}</Tilt>;
// };

// export default Tilted;
